@model BarangayMonitoringSystem.ViewModels.ResidentViewModels


@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" type="text/css" href="~/Content/incidentreport.css" />
    

    
</head>
<body>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
   
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    
   


    
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="jumbotron">
            <div class="form-horizontal">
                <h4>File an Incident Report</h4>
                <h5>The Law is Sacred</h5>
               
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

             

               @* <div class="form-group">
                    @Html.LabelFor(model => model.incidents.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(x => x.incidents.FullName, Model.ResidentList, "Please select a resident", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.incidents.ResidentFirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                *@
                <div class="namegroup">
                    @Html.LabelFor(model => model.incidents.ResidentFirstName, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.incidents.ResidentFirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First name..." } })
                        @Html.ValidationMessageFor(model => model.incidents.ResidentFirstName, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.incidents.ResidentMiddleName, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.incidents.ResidentMiddleName, new { htmlAttributes = new { @class = "form-control", placeholder = "Middle name..." } })
                        @Html.ValidationMessageFor(model => model.incidents.ResidentMiddleName, "", new { @class = "text-danger" })
                    </div>



                    @Html.LabelFor(model => model.incidents.ResidentLastName, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.incidents.ResidentLastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last name..." } })
                        @Html.ValidationMessageFor(model => model.incidents.ResidentLastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                   

                <div class="form-group">
                    @Html.LabelFor(model => model.incidents.Incidentlocation, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.incidents.Incidentlocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.incidents.Incidentlocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.incidents.Incidenttype, htmlAttributes: new { @class = "label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.incidents.Incidenttype, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.incidents.Incidenttype, "", new { @class = "text-danger" })
                    </div>
                </div>
                <fieldset>
                    <legend> Status </legend>


                    Pending
                    @Html.RadioButtonFor(model => model.incidents.Status, "Pending")

                    Resolved
                    @Html.RadioButtonFor(model => model.incidents.Status, "Resolved")


                </fieldset>

                <div class="form-group">
                    @Html.LabelFor(model => model.incidents.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.incidents.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.incidents.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.incidents.Datereported, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.incidents.Datereported, new { htmlAttributes = new { @class = "form-control  datepicker" } })
                        @Html.ValidationMessageFor(model => model.incidents.Datereported, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.incidents.DateIncident, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.incidents.DateIncident, new { htmlAttributes = new { @class = "form-control  datepicker" } })
                        @Html.ValidationMessageFor(model => model.incidents.DateIncident, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="inputbuttonclass">
                  
                        <input type="submit" value="Create" class="inputbuttonclass" />
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                  
                </div>
            </div>
               

    }


                <div>

                </div>




</body>
</html>
